<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- ######### 配置请求URL拦截的规则 ########## -->
    <!-- 配置哪些请求URL不需要拦截 -->
    <security:http pattern="/*.html" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/seller/save" security="none"/>

    <!-- use-expressions: 是否使用SpEL表达式 false  -->
    <security:http use-expressions="false">
        <!-- 剩余的请求URL，需要用什么角色或权限才可以访问 -->
        <security:intercept-url pattern="/**" access="ROLE_SELLER"/>
        <!-- 配置开启表单登录(默认登录页面)

             login-page: 配置自己的登录页面
             authentication-success-forward-url: 认证成功需要跳转的URL(请求转发)
             authentication-failure-forward-url: 认证失败需要跳转的URL(请求转发)

            default-target-url：指定了成功进行身份验证和授权后默认呈现给用户的页面。
            always-use-default-target: 总是用上面默认的目标页面。

            authentication-failure-url: 认证失败需要跳转的URL(重定向)

            password-parameter: 密码请求参数名称
            username-parameter: 用户名请求参数名称
        -->
        <security:form-login login-page="/shoplogin.html"

                             default-target-url="/admin/index.html"
                             always-use-default-target="true"

                             authentication-failure-url="/shoplogin.html"
                             username-parameter="username"
                             password-parameter="password"/>

        <!-- 关闭跨站点请求伪造CSRF -->
        <security:csrf disabled="true"/>

        <!-- 配置头部分，指定框架页策略(iframe子窗口也可以访问)-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>

        <!-- 配置安全退出 -->
        <security:logout logout-url="/logout"/>
    </security:http>


    <!-- ######### 配置认证管理器 ########## -->
    <security:authentication-manager>
        <!-- 配置认证的提供者 -->
        <security:authentication-provider user-service-ref="userDetailsService">
            <!-- 指定加密方式 -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置密码加密对象 -->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- 配置当前应用名称 -->
    <dubbo:application name="lvdou-shop-web"/>
    <!-- 配置注册中心，发现服务 -->
    <dubbo:registry address="zookeeper://192.168.12.131:2181"/>
    <!-- 引用单个的服务，产生服务接口的代理对象 -->
    <dubbo:reference id="sellerService"
                     interface="com.lvdou.sellergoods.service.SellerService"/>

    <!-- 配置自定义的认证服务类 -->
    <bean id="userDetailsService"
          class="com.lvdou.shop.service.UserDetailsServiceImpl">
        <property name="sellerService" ref="sellerService"/>
    </bean>
</beans>